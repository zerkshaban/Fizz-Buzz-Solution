{"ast":null,"code":"import _defineProperty from \"/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/src/components/Navbars/AdminNavbar.jsx\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Button, Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Input, InputGroup, NavbarBrand, Navbar, NavLink, Nav, Container, Modal, UncontrolledTooltip } from \"reactstrap\";\n\nvar AdminNavbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminNavbar, _React$Component);\n\n  function AdminNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, AdminNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminNavbar).call(this, props));\n\n    _this.updateColor = function () {\n      if (window.innerWidth < 993 && _this.state.collapseOpen) {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      } else {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      }\n    };\n\n    _this.toggleCollapse = function () {\n      if (_this.state.collapseOpen) {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      } else {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      }\n\n      _this.setState({\n        collapseOpen: !_this.state.collapseOpen\n      });\n    };\n\n    _this.toggleModalSearch = function () {\n      _this.setState({\n        modalSearch: !_this.state.modalSearch\n      });\n    };\n\n    _this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n    return _this;\n  }\n\n  _createClass(AdminNavbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateColor);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateColor);\n    } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n        className: classNames(\"navbar-absolute\", _defineProperty({}, this.state.color, this.props.location.pathname.indexOf(\"full-screen-map\") === -1)),\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-minimize d-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"minimize-sidebar btn-just-icon\",\n        color: \"link\",\n        id: \"tooltip209599\",\n        onClick: this.props.handleMiniClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-align-center visible-on-sidebar-regular\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"tim-icons icon-bullet-list-67 visible-on-sidebar-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(UncontrolledTooltip, {\n        delay: 0,\n        target: \"tooltip209599\",\n        placement: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Sidebar toggle\")), React.createElement(\"div\", {\n        className: classNames(\"navbar-toggle d-inline\", {\n          toggled: this.props.sidebarOpened\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        onClick: this.props.toggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), React.createElement(NavbarBrand, {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.props.brandText)), React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navigation\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        onClick: this.toggleCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })))), React.createElement(Modal, {\n        modalClassName: \"modal-search\",\n        isOpen: this.state.modalSearch,\n        toggle: this.toggleModalSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"inlineFormInputGroup\",\n        placeholder: \"SEARCH\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        \"aria-label\": \"Close\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        type: \"button\",\n        onClick: this.toggleModalSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return AdminNavbar;\n}(React.Component);\n\nexport default AdminNavbar;","map":{"version":3,"sources":["/Users/yousystems/Desktop/Fizz-Buzz-Solution/assignment@2/src/components/Navbars/AdminNavbar.jsx"],"names":["React","classNames","Button","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Input","InputGroup","NavbarBrand","Navbar","NavLink","Nav","Container","Modal","UncontrolledTooltip","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","removeEventListener","location","pathname","indexOf","handleMiniClick","toggled","sidebarOpened","toggleSidebar","e","preventDefault","brandText","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", {\n            [this.state.color]:\n              this.props.location.pathname.indexOf(\"full-screen-map\") === -1\n          })}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div className=\"navbar-minimize d-inline\">\n                <Button\n                  className=\"minimize-sidebar btn-just-icon\"\n                  color=\"link\"\n                  id=\"tooltip209599\"\n                  onClick={this.props.handleMiniClick}\n                >\n                  <i className=\"tim-icons icon-align-center visible-on-sidebar-regular\" />\n                  <i className=\"tim-icons icon-bullet-list-67 visible-on-sidebar-mini\" />\n                </Button>\n                <UncontrolledTooltip\n                  delay={0}\n                  target=\"tooltip209599\"\n                  placement=\"right\"\n                >\n                  Sidebar toggle\n                </UncontrolledTooltip>\n              </div>\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navigation\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n"]},"metadata":{},"sourceType":"module"}